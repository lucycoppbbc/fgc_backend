service: fgc_backend


plugins:
  - serverless-webpack
  - serverless-offline


custom:

  stage: ${opt:stage, self:provider.stage}

  tableName: ${self:custom.stage}-products

  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}

  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):default}


provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1

  environment:
    tableName: ${self:custom.tableName}


  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ NotesTable, Arn ]


functions:


# Create our resources with separate CloudFormation templates
resources:
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}
    # S3
  - ${file(resources/s3-bucket.yml)}
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}




